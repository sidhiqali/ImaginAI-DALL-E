import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { preview } from '../assets';
import { Loader, FormField } from '../components';
import { getRandomPrompt } from '../utils';

const PostPage = () => {
  const [form, setForm] = useState({
    name: '',
    prompt: '',
    image: '',
  });
  const [generatingImg, setGeneratingImg] = useState(false);
  const [loading, setLoading] = useState(false);
  const navigate = useNavigate();

  // handle input field data
  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  // handle submit created image  and share to community

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (form.prompt && form.image) {
      try {
        setLoading(true);
        const response = await fetch(
          'https://imaginai-hqw9.onrender.com/api/v1/posts',
          {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(form),
          }
        );
        await response.json();
        navigate('/');
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    } else {
      alert('Please fill all fields and generate imaage');
    }
  };

  // to pick random prompts from an array of prompts

  const handleSurpriseMe = () => {
    const randomPrompt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: randomPrompt });
  };

  //Generate image based on given prompts

  const generateImg = async () => {
    if (form.prompt && form.name) {
      try {
        setGeneratingImg(true);
        const response = await fetch(
          'https://imaginai-hqw9.onrender.com/api/v1/dalle',
          {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ prompt: form.prompt }),
          }
        );
        const data = await response.json();
        setForm({ ...form, image: `data:image/jpeg;base64,${data.image}` });
      } catch (error) {
        alert(error);
      } finally {
        setGeneratingImg(false);
      }
    } else {
      alert('Please enter a prompt and name to generate a new image');
    }
  };

  // implement of Enter button for generating a new image

  const generateImage = (e) => {
    if (
      (e?.key === 'Enter' || e === 'searchButton') &&
      form.prompt?.length > 0
    ) {
      generateImg();
    }
  };

  return (
    <section className='max-w-7xl md:ml-32 mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>Create</h1>
        <p className='mt-2 text-[#666e75] text-[16px] w-10/12 '>
          Create imaginative and visually stunning images generated by DALL-E
          AI. You can generate Creative images and share it with community. You
          can download it from there.
        </p>
      </div>
      <form className='mt-10 max-w-xl' onSubmit={handleSubmit}>
        <div className='flex flex-col gap-5'>
          <FormField
            labelName='your name'
            type='text'
            name='name'
            placeholder='eg:Jhon'
            value={form.name}
            handleChange={handleChange}
          />
          <FormField
            labelName='prompt'
            type='text'
            name='prompt'
            placeholder='A photo of a Samoyed dog with its tongue out hugging a white Siamese cat'
            value={form.prompt}
            handleChange={handleChange}
            onKeyUp={generateImage}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />
          <div className='relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center'>
            {form.image ? (
              <img
                src={form.image}
                alt={form.prompt}
                className='w-full h-full object-contain'
              />
            ) : (
              <img
                src={preview}
                alt='preview'
                className=' w-9/12 h-9/12 object-contain opacity-40'
              />
            )}
            {generatingImg && (
              <div className='absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg'>
                <Loader />
              </div>
            )}
          </div>
        </div>
        <div className='mt-5 flex flex-col sm:flex-row gap-5 w-64 '>
          <button
            type='button'
            onClick={generateImg}
            className='text-white h-14 bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 text-center"'
          >
            {generatingImg ? 'Generating...' : 'Generate'}
          </button>
          {form.image && (
            <button
              onClick={handleSubmit}
              type='button'
              className='text-white h-14 bg-[#6469ff] font-medium rounded-md text-sm w-full sm:w-auto px-5 text-center"'
            >
              {loading ? 'Sharing...' : 'Share with community '}
            </button>
          )}
        </div>
      </form>
    </section>
  );
};

export default PostPage;
